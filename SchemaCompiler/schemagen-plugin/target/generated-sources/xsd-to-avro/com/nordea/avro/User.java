/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.nordea.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** XSD Type:{urn:nonstandard:XSD_Schema}User */
@org.apache.avro.specific.AvroGenerated
public class User extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4075899468823983819L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"com.nordea.avro\",\"doc\":\"XSD Type:{urn:nonstandard:XSD_Schema}User\",\"fields\":[{\"name\":\"fullName\",\"type\":[\"null\",\"string\"],\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}string\",\"default\":\"null\"},{\"name\":\"age\",\"type\":\"int\",\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}int\",\"default\":\"0\"},{\"name\":\"born\",\"type\":{\"type\":\"record\",\"name\":\"_Date\",\"doc\":\"A date stored as a timestamp, in [ms] UTC.\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\",\"default\":\"0\"}]},\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime\"},{\"name\":\"died\",\"type\":\"_Date\",\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'\"},{\"name\":\"tweets\",\"type\":\"long\",\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}long\",\"default\":\"0\"},{\"name\":\"married\",\"type\":\"boolean\",\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}boolean\",\"default\":\"true\"},{\"name\":\"height\",\"type\":\"double\",\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}decimal\",\"default\":0.0},{\"name\":\"width\",\"type\":\"double\",\"doc\":\"XSD Type:{http://www.w3.org/2001/XMLSchema}double\",\"default\":0.0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}string */
  @Deprecated public java.lang.CharSequence fullName;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}int */
  @Deprecated public int age;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime */
  @Deprecated public com.nordea.avro._Date born;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd' */
  @Deprecated public com.nordea.avro._Date died;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}long */
  @Deprecated public long tweets;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}boolean */
  @Deprecated public boolean married;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}decimal */
  @Deprecated public double height;
  /** XSD Type:{http://www.w3.org/2001/XMLSchema}double */
  @Deprecated public double width;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public User() {}

  /**
   * All-args constructor.
   * @param fullName XSD Type:{http://www.w3.org/2001/XMLSchema}string
   * @param age XSD Type:{http://www.w3.org/2001/XMLSchema}int
   * @param born XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
   * @param died XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
   * @param tweets XSD Type:{http://www.w3.org/2001/XMLSchema}long
   * @param married XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
   * @param height XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
   * @param width XSD Type:{http://www.w3.org/2001/XMLSchema}double
   */
  public User(java.lang.CharSequence fullName, java.lang.Integer age, com.nordea.avro._Date born, com.nordea.avro._Date died, java.lang.Long tweets, java.lang.Boolean married, java.lang.Double height, java.lang.Double width) {
    this.fullName = fullName;
    this.age = age;
    this.born = born;
    this.died = died;
    this.tweets = tweets;
    this.married = married;
    this.height = height;
    this.width = width;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fullName;
    case 1: return age;
    case 2: return born;
    case 3: return died;
    case 4: return tweets;
    case 5: return married;
    case 6: return height;
    case 7: return width;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fullName = (java.lang.CharSequence)value$; break;
    case 1: age = (java.lang.Integer)value$; break;
    case 2: born = (com.nordea.avro._Date)value$; break;
    case 3: died = (com.nordea.avro._Date)value$; break;
    case 4: tweets = (java.lang.Long)value$; break;
    case 5: married = (java.lang.Boolean)value$; break;
    case 6: height = (java.lang.Double)value$; break;
    case 7: width = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fullName' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}string
   */
  public java.lang.CharSequence getFullName() {
    return fullName;
  }

  /**
   * Sets the value of the 'fullName' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}string
   * @param value the value to set.
   */
  public void setFullName(java.lang.CharSequence value) {
    this.fullName = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}int
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}int
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'born' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
   */
  public com.nordea.avro._Date getBorn() {
    return born;
  }

  /**
   * Sets the value of the 'born' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
   * @param value the value to set.
   */
  public void setBorn(com.nordea.avro._Date value) {
    this.born = value;
  }

  /**
   * Gets the value of the 'died' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
   */
  public com.nordea.avro._Date getDied() {
    return died;
  }

  /**
   * Sets the value of the 'died' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
   * @param value the value to set.
   */
  public void setDied(com.nordea.avro._Date value) {
    this.died = value;
  }

  /**
   * Gets the value of the 'tweets' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}long
   */
  public java.lang.Long getTweets() {
    return tweets;
  }

  /**
   * Sets the value of the 'tweets' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}long
   * @param value the value to set.
   */
  public void setTweets(java.lang.Long value) {
    this.tweets = value;
  }

  /**
   * Gets the value of the 'married' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
   */
  public java.lang.Boolean getMarried() {
    return married;
  }

  /**
   * Sets the value of the 'married' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
   * @param value the value to set.
   */
  public void setMarried(java.lang.Boolean value) {
    this.married = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
   */
  public java.lang.Double getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
   * @param value the value to set.
   */
  public void setHeight(java.lang.Double value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'width' field.
   * @return XSD Type:{http://www.w3.org/2001/XMLSchema}double
   */
  public java.lang.Double getWidth() {
    return width;
  }

  /**
   * Sets the value of the 'width' field.
   * XSD Type:{http://www.w3.org/2001/XMLSchema}double
   * @param value the value to set.
   */
  public void setWidth(java.lang.Double value) {
    this.width = value;
  }

  /**
   * Creates a new User RecordBuilder.
   * @return A new User RecordBuilder
   */
  public static com.nordea.avro.User.Builder newBuilder() {
    return new com.nordea.avro.User.Builder();
  }

  /**
   * Creates a new User RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new User RecordBuilder
   */
  public static com.nordea.avro.User.Builder newBuilder(com.nordea.avro.User.Builder other) {
    return new com.nordea.avro.User.Builder(other);
  }

  /**
   * Creates a new User RecordBuilder by copying an existing User instance.
   * @param other The existing instance to copy.
   * @return A new User RecordBuilder
   */
  public static com.nordea.avro.User.Builder newBuilder(com.nordea.avro.User other) {
    return new com.nordea.avro.User.Builder(other);
  }

  /**
   * RecordBuilder for User instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User>
    implements org.apache.avro.data.RecordBuilder<User> {

    /** XSD Type:{http://www.w3.org/2001/XMLSchema}string */
    private java.lang.CharSequence fullName;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}int */
    private int age;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime */
    private com.nordea.avro._Date born;
    private com.nordea.avro._Date.Builder bornBuilder;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd' */
    private com.nordea.avro._Date died;
    private com.nordea.avro._Date.Builder diedBuilder;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}long */
    private long tweets;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}boolean */
    private boolean married;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}decimal */
    private double height;
    /** XSD Type:{http://www.w3.org/2001/XMLSchema}double */
    private double width;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.nordea.avro.User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fullName)) {
        this.fullName = data().deepCopy(fields()[0].schema(), other.fullName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.born)) {
        this.born = data().deepCopy(fields()[2].schema(), other.born);
        fieldSetFlags()[2] = true;
      }
      if (other.hasBornBuilder()) {
        this.bornBuilder = com.nordea.avro._Date.newBuilder(other.getBornBuilder());
      }
      if (isValidValue(fields()[3], other.died)) {
        this.died = data().deepCopy(fields()[3].schema(), other.died);
        fieldSetFlags()[3] = true;
      }
      if (other.hasDiedBuilder()) {
        this.diedBuilder = com.nordea.avro._Date.newBuilder(other.getDiedBuilder());
      }
      if (isValidValue(fields()[4], other.tweets)) {
        this.tweets = data().deepCopy(fields()[4].schema(), other.tweets);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.married)) {
        this.married = data().deepCopy(fields()[5].schema(), other.married);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.height)) {
        this.height = data().deepCopy(fields()[6].schema(), other.height);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.width)) {
        this.width = data().deepCopy(fields()[7].schema(), other.width);
        fieldSetFlags()[7] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing User instance
     * @param other The existing instance to copy.
     */
    private Builder(com.nordea.avro.User other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.fullName)) {
        this.fullName = data().deepCopy(fields()[0].schema(), other.fullName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.born)) {
        this.born = data().deepCopy(fields()[2].schema(), other.born);
        fieldSetFlags()[2] = true;
      }
      this.bornBuilder = null;
      if (isValidValue(fields()[3], other.died)) {
        this.died = data().deepCopy(fields()[3].schema(), other.died);
        fieldSetFlags()[3] = true;
      }
      this.diedBuilder = null;
      if (isValidValue(fields()[4], other.tweets)) {
        this.tweets = data().deepCopy(fields()[4].schema(), other.tweets);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.married)) {
        this.married = data().deepCopy(fields()[5].schema(), other.married);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.height)) {
        this.height = data().deepCopy(fields()[6].schema(), other.height);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.width)) {
        this.width = data().deepCopy(fields()[7].schema(), other.width);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'fullName' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}string
      * @return The value.
      */
    public java.lang.CharSequence getFullName() {
      return fullName;
    }

    /**
      * Sets the value of the 'fullName' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}string
      * @param value The value of 'fullName'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setFullName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.fullName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'fullName' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}string
      * @return True if the 'fullName' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'fullName' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}string
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearFullName() {
      fullName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}int
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}int
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setAge(int value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}int
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'age' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}int
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearAge() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'born' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
      * @return The value.
      */
    public com.nordea.avro._Date getBorn() {
      return born;
    }

    /**
      * Sets the value of the 'born' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
      * @param value The value of 'born'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setBorn(com.nordea.avro._Date value) {
      validate(fields()[2], value);
      this.bornBuilder = null;
      this.born = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'born' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
      * @return True if the 'born' field has been set, false otherwise.
      */
    public boolean hasBorn() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'born' field and creates one if it doesn't exist yet.
     * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
     * @return This builder.
     */
    public com.nordea.avro._Date.Builder getBornBuilder() {
      if (bornBuilder == null) {
        if (hasBorn()) {
          setBornBuilder(com.nordea.avro._Date.newBuilder(born));
        } else {
          setBornBuilder(com.nordea.avro._Date.newBuilder());
        }
      }
      return bornBuilder;
    }

    /**
     * Sets the Builder instance for the 'born' field
     * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.nordea.avro.User.Builder setBornBuilder(com.nordea.avro._Date.Builder value) {
      clearBorn();
      bornBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'born' field has an active Builder instance
     * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
     * @return True if the 'born' field has an active Builder instance
     */
    public boolean hasBornBuilder() {
      return bornBuilder != null;
    }

    /**
      * Clears the value of the 'born' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}dateTime
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearBorn() {
      born = null;
      bornBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'died' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
      * @return The value.
      */
    public com.nordea.avro._Date getDied() {
      return died;
    }

    /**
      * Sets the value of the 'died' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
      * @param value The value of 'died'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setDied(com.nordea.avro._Date value) {
      validate(fields()[3], value);
      this.diedBuilder = null;
      this.died = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'died' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
      * @return True if the 'died' field has been set, false otherwise.
      */
    public boolean hasDied() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'died' field and creates one if it doesn't exist yet.
     * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
     * @return This builder.
     */
    public com.nordea.avro._Date.Builder getDiedBuilder() {
      if (diedBuilder == null) {
        if (hasDied()) {
          setDiedBuilder(com.nordea.avro._Date.newBuilder(died));
        } else {
          setDiedBuilder(com.nordea.avro._Date.newBuilder());
        }
      }
      return diedBuilder;
    }

    /**
     * Sets the Builder instance for the 'died' field
     * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.nordea.avro.User.Builder setDiedBuilder(com.nordea.avro._Date.Builder value) {
      clearDied();
      diedBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'died' field has an active Builder instance
     * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
     * @return True if the 'died' field has an active Builder instance
     */
    public boolean hasDiedBuilder() {
      return diedBuilder != null;
    }

    /**
      * Clears the value of the 'died' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}date, Date format 'yyyy-MM-dd'
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearDied() {
      died = null;
      diedBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'tweets' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}long
      * @return The value.
      */
    public java.lang.Long getTweets() {
      return tweets;
    }

    /**
      * Sets the value of the 'tweets' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}long
      * @param value The value of 'tweets'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setTweets(long value) {
      validate(fields()[4], value);
      this.tweets = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'tweets' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}long
      * @return True if the 'tweets' field has been set, false otherwise.
      */
    public boolean hasTweets() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'tweets' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}long
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearTweets() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'married' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
      * @return The value.
      */
    public java.lang.Boolean getMarried() {
      return married;
    }

    /**
      * Sets the value of the 'married' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
      * @param value The value of 'married'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setMarried(boolean value) {
      validate(fields()[5], value);
      this.married = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'married' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
      * @return True if the 'married' field has been set, false otherwise.
      */
    public boolean hasMarried() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'married' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}boolean
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearMarried() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
      * @return The value.
      */
    public java.lang.Double getHeight() {
      return height;
    }

    /**
      * Sets the value of the 'height' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setHeight(double value) {
      validate(fields()[6], value);
      this.height = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'height' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}decimal
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearHeight() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'width' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}double
      * @return The value.
      */
    public java.lang.Double getWidth() {
      return width;
    }

    /**
      * Sets the value of the 'width' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}double
      * @param value The value of 'width'.
      * @return This builder.
      */
    public com.nordea.avro.User.Builder setWidth(double value) {
      validate(fields()[7], value);
      this.width = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'width' field has been set.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}double
      * @return True if the 'width' field has been set, false otherwise.
      */
    public boolean hasWidth() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'width' field.
      * XSD Type:{http://www.w3.org/2001/XMLSchema}double
      * @return This builder.
      */
    public com.nordea.avro.User.Builder clearWidth() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public User build() {
      try {
        User record = new User();
        record.fullName = fieldSetFlags()[0] ? this.fullName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.Integer) defaultValue(fields()[1]);
        if (bornBuilder != null) {
          record.born = this.bornBuilder.build();
        } else {
          record.born = fieldSetFlags()[2] ? this.born : (com.nordea.avro._Date) defaultValue(fields()[2]);
        }
        if (diedBuilder != null) {
          record.died = this.diedBuilder.build();
        } else {
          record.died = fieldSetFlags()[3] ? this.died : (com.nordea.avro._Date) defaultValue(fields()[3]);
        }
        record.tweets = fieldSetFlags()[4] ? this.tweets : (java.lang.Long) defaultValue(fields()[4]);
        record.married = fieldSetFlags()[5] ? this.married : (java.lang.Boolean) defaultValue(fields()[5]);
        record.height = fieldSetFlags()[6] ? this.height : (java.lang.Double) defaultValue(fields()[6]);
        record.width = fieldSetFlags()[7] ? this.width : (java.lang.Double) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
